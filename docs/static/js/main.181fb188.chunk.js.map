{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","originCat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","cat","divRoot","document","querySelector","ReactDOM","render"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAYhD,OACE,0BAAMC,SANc,SAACC,GACrBA,EAAEC,iBACFN,GAAc,SAACO,GAAD,OAAgBL,GAAhB,mBAA+BK,SAK3C,2BAAOC,KAAK,OAAOC,MAAOP,EAAYQ,SAXhB,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,UAGV,GAHU,sDAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAGtCa,QAAQC,IAAIR,GAdS,kBAedA,GAfc,4CAAH,sDCEPS,EAAc,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,yBAAKgB,UAAU,QACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,MCAbS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdZ,mBAAS,CACjCmB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPjB,KAAMoB,EACNL,SAAS,MAEV,QAEJ,CAACtB,IAEGuB,EDfmBM,CAAa7B,GAA/BO,EAD+B,EAC/BA,KAAMe,EADyB,EACzBA,QAEd,OACE,oCACE,gCAAMtB,EAAN,KACCsB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aACZX,EAAKE,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaoB,IAAKpB,EAAIC,IAAQD,UET3BqB,EAAe,WAAO,IAAD,EACI3C,mBAAS,CAAC,KADd,mBACzB4C,EADyB,KACb7C,EADa,KAGhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG6C,EAAWvB,KAAI,SAACwB,GAAD,OACd,kBAAC,EAAD,CAASH,IAAKG,EAAKjC,SAAUiC,UCTjCC,G,MAAUC,SAASC,cAAc,UAIvCC,IAASC,OAAO,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.181fb188.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Proptypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmint = (e) => {\n    e.preventDefault();\n    setCategories((originCat) => [inputValue, ...originCat]);\n  };\n\n  return (\n    <form onSubmit={handleSubmint}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: Proptypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=${10}&api_key=qWwg3yYDMHsVDPTMOvi3e0QxbbYLkGrW`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  console.log(gifs);\n  return gifs;\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const { data, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3> {category} </h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n        {data.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setTimeout(() => {\n        setState({\n          data: imgs,\n          loading: false,\n        });\n      }, 0);\n    });\n  }, [category]);\n\n  return state; //{ data: [], loading: true};\n};\n","import React, { useState } from \"react\";\n\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"\"]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((cat) => (\n          <GifGrid key={cat} category={cat} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GiftExpertApp\";\n\nimport \"./index.css\";\n\nconst divRoot = document.querySelector(\"#root\");\n\n//ReactDOM.render(<PrimeraApp value={\"Hola soy Goku\"} />, divRoot);\n\nReactDOM.render(<GifExpertApp />, divRoot);\n"],"sourceRoot":""}